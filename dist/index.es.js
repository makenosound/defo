function e(e,t){return function(e,t){return Object.keys(e.dataset).filter(e=>0===e.indexOf(t))}(e,t).length>0}function t(e){return e.charAt(0).toUpperCase()+e.slice(1)}function r(e){try{return JSON.parse(e)}catch(e){}return e}function o({prefix:e,scope:t,views:r}){Object.keys(r).forEach(o=>{const s=`data-${e}-${function(e){return e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}(o)}`;let a=Array.prototype.slice.call(t.querySelectorAll(`[${s}]`));t.hasAttribute(s)&&(a=[t].concat(a)),a.forEach(t=>{n(t,e,r,o)})})}function n(e,o,n,s){if(e._defoUpdate&&e._defoUpdate[s])return;const a=n[s],i=function(e,r){return`${o=e,o.replace(/^[_.\- ]+/,"").toLowerCase().replace(/[_.\- ]+(\w|$)/g,(e,t)=>t.toUpperCase()).replace(/\d+(\w|$)/g,e=>e.toUpperCase())}${t(r)}`;var o}(o,s);if(!(a&&i in e.dataset))return;const c=a(e,r(e.dataset[i]));e._defoUpdate=e._defoUpdate||{},e._defoDestroy=e._defoDestroy||{},e._defoUpdate[s]=function(e){return function(t,o){t=t?r(t):t,o=o?r(o):o,Promise.resolve(e).then(e=>{e.update&&e.update(t,o)})}}(c),e._defoDestroy[s]=function(e,t,r){return function(){Promise.resolve(e).then(e=>{e.destroy&&(e.destroy(),delete t._defoUpdate[r],delete t._defoDestroy[r])})}}(c,e,s)}function s({prefix:r,scope:s,views:a}){o({prefix:r,scope:s,views:a});const i=new MutationObserver(s=>{s.forEach(s=>{const i=s.target;if("attributes"===s.type&&function(e,t){return 0===e.indexOf(`data-${t}-`)}(s.attributeName,r)){const e=function(e){return e.split("-").slice(2).map((e,r)=>r>0?t(e):e).join("")}(s.attributeName);i.hasAttribute(s.attributeName)?null!==s.oldValue?i._defoUpdate[e](i.getAttribute(s.attributeName),s.oldValue):n(i,r,a,e):i._defoDestroy[e]()}else"childList"===s.type&&(console.log(s),Array.prototype.slice.call(s.removedNodes).filter(e=>e.nodeType!==e.TEXT_NODE).filter(t=>e(t,r)).forEach(e=>{Object.keys(e._defoDestroy).forEach(t=>{e._defoDestroy[t]()})}),Array.prototype.slice.call(s.addedNodes).filter(e=>e.nodeType!==e.TEXT_NODE).forEach(e=>{Promise.resolve(e).then(e=>{o({prefix:r,scope:e,views:a})})}))})});return i.observe(s,{attributes:!0,attributeOldValue:!0,childList:!0,characterData:!1,subtree:!0}),i}export default function({prefix:e="defo",scope:t=document.documentElement,views:r={}}={}){const o=s({prefix:e,scope:t,views:r});return{registerViews:e=>r=function(e,t){return Object.assign(Object.assign({},e),t)}(r,e),unregisterViews:e=>r=function(e,t){const r={};return Object.keys(e).forEach(o=>{-1===t.indexOf(o)&&(r[o]=e[o])}),r}(r,e),destroy:()=>{o.disconnect()}}}
