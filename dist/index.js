"use strict";function attributeNameMatchesPrefix(e,t){return 0===e.indexOf(`data-${t}-`)}function attributeNameToViewName(e){return e.split("-").slice(2).map((e,t)=>t>0?capitalize(e):e).join("")}function datasetKeysForPrefix(e,t){return Object.keys(e.dataset).filter(e=>0===e.indexOf(t))}function hasDatasetKeysMatchingPrefix(e,t){return datasetKeysForPrefix(e,t).length>0}function keyForDataset(e,t){return`${lowerFirsterize(e)}${capitalize(t)}`}function dasherize(e){return e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}function lowerFirsterize(e){return e.replace(/^[_.\- ]+/,"").toLowerCase().replace(/[_.\- ]+(\w|$)/g,(e,t)=>t.toUpperCase()).replace(/\d+(\w|$)/g,e=>e.toUpperCase())}function capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}function parseProps(e){try{return JSON.parse(e)}catch(e){}return e}function renderTree({prefix:e,scope:t,views:r}){Object.keys(r).forEach(o=>{const a=`data-${e}-${dasherize(o)}`;let s=Array.prototype.slice.call(t.querySelectorAll(`[${a}]`));t.hasAttribute(a)&&(s=[t].concat(s)),s.forEach(t=>{renderViewForNode(t,e,r,o)})})}function renderViewForNode(e,t,r,o){if(e._defoUpdate&&e._defoUpdate[o])return;const a=r[o],s=keyForDataset(t,o);if(!(a&&s in e.dataset))return;const i=a(e,parseProps(e.dataset[s]));e._defoUpdate=e._defoUpdate||{},e._defoDestroy=e._defoDestroy||{},e._defoUpdate[o]=unwrapUpdate(i),e._defoDestroy[o]=unwrapDestroy(i,e,o)}function unwrapUpdate(e){return function(t,r){t=t?parseProps(t):t,r=r?parseProps(r):r,Promise.resolve(e).then(e=>{e.update&&e.update(t,r)})}}function unwrapDestroy(e,t,r){return function(){Promise.resolve(e).then(e=>{e.destroy&&(e.destroy(),delete t._defoUpdate[r],delete t._defoDestroy[r])})}}function observe({prefix:e,scope:t,views:r}){renderTree({prefix:e,scope:t,views:r});const o=new MutationObserver(t=>{t.forEach(t=>{const o=t.target;if("attributes"===t.type&&attributeNameMatchesPrefix(t.attributeName,e)){const a=attributeNameToViewName(t.attributeName);o.hasAttribute(t.attributeName)?null!==t.oldValue?o._defoUpdate[a](o.getAttribute(t.attributeName),t.oldValue):renderViewForNode(o,e,r,a):o._defoDestroy[a]()}else"childList"===t.type&&(console.log(t),Array.prototype.slice.call(t.removedNodes).filter(e=>e.nodeType!==e.TEXT_NODE).filter(t=>hasDatasetKeysMatchingPrefix(t,e)).forEach(e=>{Object.keys(e._defoDestroy).forEach(t=>{e._defoDestroy[t]()})}),Array.prototype.slice.call(t.addedNodes).filter(e=>e.nodeType!==e.TEXT_NODE).forEach(t=>{Promise.resolve(t).then(t=>{renderTree({prefix:e,scope:t,views:r})})}))})});return o.observe(t,{attributes:!0,attributeOldValue:!0,childList:!0,characterData:!1,subtree:!0}),o}function registerViews(e,t){return Object.assign(Object.assign({},e),t)}function unregisterViews(e,t){const r={};return Object.keys(e).forEach(o=>{-1===t.indexOf(o)&&(r[o]=e[o])}),r}function defo({prefix:e="defo",scope:t=document.documentElement,views:r={}}={}){const o=observe({prefix:e,scope:t,views:r});return{registerViews:e=>r=registerViews(r,e),unregisterViews:e=>r=unregisterViews(r,e),destroy:()=>{o.disconnect()}}}module.exports=defo;
